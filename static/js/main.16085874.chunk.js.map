{"version":3,"sources":["Components/Button.js","Components/Header.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setshowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16085874.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Button = ({ color,text,onClick }) => {\r\n   \r\n    return (\r\n        <div>\r\n            <button \r\n            onClick ={onClick}\r\n            style ={{ backgroundColor : color }} \r\n            className='btn' \r\n            >{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nButton.defaultProps = {\r\n    color : 'steelblue',\r\n}\r\n\r\n\r\nButton.propTypes = {\r\n    text : PropTypes.string,\r\n    color : PropTypes.string,\r\n    onclick : PropTypes.func,\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './Button';\r\nconst Header = ({ title,onAdd,showAdd }) => {\r\n\r\n    // const onClick = () => {\r\n    //     console.log('clicked');\r\n    // }\r\n\r\n    return(\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button \r\n                color ={showAdd ? 'red' : 'green'}\r\n                text = {showAdd ? 'close' : \"Add a Task\"}\r\n                onClick = {onAdd}\r\n            />\r\n\r\n        </header>\r\n    );\r\n\r\n}\r\n\r\n// Header.defaultProps = {\r\n//     title :\"Task Tracker\",       default props\r\n// }\r\n\r\n// Header.PropTypes ={\r\n//     title :PropTypes.string,     //defining prop types\r\n// }\r\n\r\n//css in JS\r\n// const headingstyle = {\r\n//     color :'red',\r\n//     backgroundColor :\"black\",\r\n// }\r\n\r\nexport default Header;","import React from 'react';\r\nimport { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ task,onDelete,onToggle }) => {\r\n    return (\r\n        <div \r\n            className={`task ${task.reminder ?\r\n                'reminder' : ''}`} \r\n            onDoubleClick={ () => onToggle(task.id)}\r\n            >\r\n            <h3>{task.text}{' '}\r\n            <FaTimes\r\n                style={{ color:'red' , cursor: 'pointer' }} \r\n                onClick ={()=> onDelete(task.id)}\r\n                 />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport Task from './Task'\r\n\r\n\r\n\r\nconst Tasks = ({ tasks,onDelete,onToggle }) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            {tasks.map((task) => (\r\n                <Task key={task.id} \r\n                task ={task} \r\n                onDelete={onDelete}\r\n                onToggle = {onToggle}\r\n                />\r\n            ))}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks\r\n","import React,{useState} from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text,setText] = useState('')\r\n    const [day,setDay] = useState('')\r\n    const [reminder,setReminder] = useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n\r\n\r\n        if (!text) {\r\n            alert(\"Please add a task\")\r\n            return\r\n        }\r\n\r\n        onAdd({ text,day,reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label >Task</label>\r\n                <input type=\"text\"placeholder='Add\r\n                Task' \r\n                value ={text} \r\n                onChange ={(e)=>\r\n                    setText(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label >Day and Time</label>\r\n                <input type=\"text\"placeholder='Add\r\n                Day and Time'  \r\n                value ={day} \r\n                onChange ={(e)=>\r\n                    setDay(e.target.value)}/>\r\n            </div>           \r\n\r\n            <div className='form-control\r\n            form-control-check'>\r\n                <label >Set Reminder</label>\r\n                <input type=\"checkbox\"  \r\n                checked={reminder}\r\n                value ={reminder}\r\n                onChange ={(e)=>\r\n                    setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n\r\n            <input type=\"submit\" value='Save Task'\r\n            className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","// import logo from './logo.svg';\nimport {useState} from 'react';\nimport './App.css';\nimport Header from './Components/Header'\nimport './index.css'\nimport  Tasks from './Components/Tasks';\nimport  AddTask from './Components/AddTask';\n\n\nconst App = () => {\n\nconst [showAddTask,setshowAddTask] =useState(false);\n  const [tasks,setTasks] = useState([\n    // {\n    //     id:1,\n    //     text :'Doctors Appointment',\n    //     day : 'Feb 5th at 2.30pm',\n    //     reminder :true,\n    // },\n    // {\n    //     id:2,\n    //     text :'Meeting at School',\n    //     day : 'Feb 6th at 1.30pm',\n    //     reminder :true,\n    // },   \n    // {\n    //     id:3,\n    //     text :'food Shopping',\n    //     day : 'Feb 5th at 2.30pm',\n    //     reminder :false,\n    // }\n])\n\n//add task\n\nconst addTask = (task) => {\n  const id=Math.floor(Math.random()*10000)+1\n  const newTask ={ id,...task }\n  setTasks([...tasks,newTask])\n}\n\n//delete task\n\n  const deleteTask = (id) => {\n  setTasks(tasks.filter((task) =>task.id !==id))\n}\n\n\n//Toggle remainder\n\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => \n      task.id ===id ? {...task ,reminder \n      :!task.reminder }:task\n      )\n    )\n  }\n\n\n  return (\n    <div className=\"container\">\n      {/* <h1>Hello From React </h1> */}\n      <h2><Header \n      title=\"Task Tracker\"\n      onAdd={() => setshowAddTask(!showAddTask)}\n      showAdd={showAddTask}\n      /></h2>\n\n      { showAddTask && <AddTask onAdd={addTask}/>}\n      { tasks.length>0 ?<Tasks tasks={tasks}\n      onDelete= {deleteTask} \n      onToggle ={toggleReminder}\n      /> :<h2>No Task To Show</h2>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}